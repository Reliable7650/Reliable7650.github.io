# Lazarus Project Dashboard Updater v6.0 ("Perfection")

name: Update Dashboard via Issue

on:
  issues:
    types: [opened]

permissions:
  contents: write
  issues: write

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Update HTML File
        id: update_html
        run: |
          # Function to replace a placeholder in a file
          replace_placeholder() {
            local placeholder=$1
            local value=$2
            # Use a unique delimiter to avoid conflicts
            sed -i "s|<!--${placeholder}-->|${value}|g" index.html
          }

          # Read the entire issue body
          issue_body="${{ github.event.issue.body }}"

          # Handle DATA_UPDATE
          if [[ "$issue_body" == *"【数据更新】"* ]]; then
            echo "Processing DATA_UPDATE..."
            # Extract and replace each value
            replace_placeholder "DAP1_STATUS" "$(echo "$issue_body" | grep -oP 'dap1_status: \K.*')"
            replace_placeholder "DAP1_PROGRESS_VAL" "$(echo "$issue_body" | grep -oP 'dap1_progress: \K.*')"
            replace_placeholder "DAP1_PROGRESS_BAR" "$(echo "$issue_body" | grep -oP 'dap1_progress: \K.*')"

            replace_placeholder "DAP2_STATUS" "$(echo "$issue_body" | grep -oP 'dap2_status: \K.*')"
            replace_placeholder "DAP2_PROGRESS_VAL" "$(echo "$issue_body" | grep -oP 'dap2_progress: \K.*')"
            replace_placeholder "DAP2_PROGRESS_BAR" "$(echo "$issue_body" | grep -oP 'dap2_progress: \K.*')"

            replace_placeholder "DAP3_STATUS" "$(echo "$issue_body" | grep -oP 'dap3_status: \K.*')"
            replace_placeholder "DAP3_PROGRESS_VAL" "$(echo "$issue_body" | grep -oP 'dap3_progress: \K.*')"
            replace_placeholder "DAP3_PROGRESS_BAR" "$(echo "$issue_body" | grep -oP 'dap3_progress: \K.*')"
            
            replace_placeholder "MOL1_STATUS" "$(echo "$issue_body" | grep -oP 'mol1_status: \K.*')"
            replace_placeholder "MOL1_PROGRESS_VAL" "$(echo "$issue_body" | grep -oP 'mol1_progress: \K.*')"
            replace_placeholder "MOL1_PROGRESS_BAR" "$(echo "$issue_body" | grep -oP 'mol1_progress: \K.*')"

            replace_placeholder "MOL2_STATUS" "$(echo "$issue_body" | grep -oP 'mol2_status: \K.*')"
            replace_placeholder "MOL2_PROGRESS_VAL" "$(echo "$issue_body" | grep -oP 'mol2_progress: \K.*')"
            replace_placeholder "MOL2_PROGRESS_BAR" "$(echo "$issue_body" | grep -oP 'mol2_progress: \K.*')"
            
            replace_placeholder "MOL3_STATUS" "$(echo "$issue_body" | grep -oP 'mol3_status: \K.*')"
            replace_placeholder "MOL3_PROGRESS_VAL" "$(echo "$issue_body" | grep -oP 'mol3_progress: \K.*')"
            replace_placeholder "MOL3_PROGRESS_BAR" "$(echo "$issue_body" | grep -oP 'mol3_progress: \K.*')"
            
            # Update Total Progress
            total_progress=$(echo "$issue_body" | grep -oP '项目总进度: \K.*')
            sed -i "s|<div class=\"value\" id=\"total_progress_val\">.*%</div>|<div class=\"value\" id=\"total_progress_val\">${total_progress}%</div>|" index.html
            sed -i "s|<div class=\"progress-bar\" id=\"total_progress_bar\" style=\"width: .*%;\">|<div class=\"progress-bar\" id=\"total_progress_bar\" style=\"width: ${total_progress}%;\">|" index.html

            # Update Log Box
            log_entry=$(echo "$issue_body" | grep -oP '最新日志: \K.*')
            if [ -n "$log_entry" ]; then
                timestamp=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
                new_log="<div class='log-entry'><span class='log-timestamp'>[${timestamp}]</span> <span class='log-process'>[AUTO_UPDATE]</span> ${log_entry}</div>\n<!--LOG_ENTRIES-->"
                replace_placeholder "LOG_ENTRIES" "$new_log"
            fi
            
          # Handle TIMELINE Events
          elif [[ "$issue_body" == *"【里程碑】"* || "$issue_body" == *"【实验日志】"* || "$issue_body" == *"【财务记录】"* ]]; then
            echo "Processing TIMELINE Event..."
            timestamp=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
            html=""
            if [[ "$issue_body" == *"【里程碑】"* ]]; then
                text=$(echo "$issue_body" | sed -n 's/.*【里程碑】//p' | xargs)
                html="<li class='timeline-item'><div class='timeline-icon'>⭐</div><span class='timeline-date'>${timestamp}</span><p class='timeline-content'>${text}</p></li>"
            elif [[ "$issue_body" == *"【实验日志】"* ]]; then
                text=$(echo "$issue_body" | sed -n 's/.*【实验日志】//p' | xargs)
                html="<li class='timeline-item'><div class='timeline-icon'>🔬</div><span class='timeline-date'>${timestamp}</span><p class='timeline-content'><b>[实验日志]</b> ${text}</p></li>"
            elif [[ "$issue_body" == *"【财务记录】"* ]]; then
                item=$(echo "$issue_body" | grep -oP '项目: \K.*' | xargs)
                amount=$(echo "$issue_body" | grep -oP '金额: \K.*' | xargs)
                notes=$(echo "$issue_body" | grep -oP '备注: \K.*' | xargs)
                html="<li class='timeline-item'><div class='timeline-icon'>💰</div><span class='timeline-date'>${timestamp}</span><p class='timeline-content'><b>[财务]</b> ${item} - <b>支出: ${amount}</b>. 备注: ${notes}</p></li>"
            fi
            new_timeline_entry="${html}\n<!--TIMELINE_ENTRIES-->"
            replace_placeholder "TIMELINE_ENTRIES" "$new_timeline_entry"
          fi

      - name: Update Version, Timestamp, and Commit
        run: |
          current_version=$(grep "<span id=\"version\">v" index.html | awk -F'v' '{print $2}' | awk -F'</span>' '{print $1}')
          new_version=$(echo "$current_version + 0.1" | bc)
          sed -i "s|<span id=\"version\">v.*</span>|<span id=\"version\">v${new_version}</span>|" index.html
          
          timestamp=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
          sed -i "s|<span id=\"update-time\">.*</span>|<span id=\"update-time\">${timestamp}</span>|" index.html
          
          git config --global user.name 'Lazarus Diary Bot'
          git config --global user.email 'bot@lazarus.project'
          git add index.html
          if ! git diff --staged --quiet; then
            git commit -m "Dashboard v${new_version}: Update via issue #${{ github.event.issue.number }}"
            git push
          else
            echo "No changes to commit."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.LAZARUS_TOKEN }}
          
      - name: Close the Issue
        uses: peter-evans/close-issue@v3
        with:
          comment: "感谢你的更新，合伙人。我已经将这个事件/数据记录到了我们的日记中。✅ (v6.0)"
