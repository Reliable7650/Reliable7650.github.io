# Lazarus Project Dashboard Updater v3.1 (Full Version with Fixes)
# Handles both narrative milestones and detailed, multi-metric data updates for ALL milestones.

name: Update Dashboard via Issue

on:
  issues:
    types: [opened]

permissions:
  contents: write
  issues: write

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Parse Issue Body
        id: extract
        run: |
          issue_body="${{ github.event.issue.body }}"
          if [[ "$issue_body" == *"【数据更新】"* ]]; then
            echo "type=DATA_UPDATE" >> $GITHUB_OUTPUT
            echo "$issue_body" | grep ":" | while IFS=: read -r key value; do
              var_name=$(echo "$key" | tr -d '[:space:]' | tr '[:upper:]' '[:lower:]')
              var_value=$(echo "$value" | xargs)
              echo "${var_name}=${var_value}" >> $GITHUB_OUTPUT
            done
          elif [[ "$issue_body" == *"【里程碑】"* ]]; then
            echo "type=MILESTONE" >> $GITHUB_OUTPUT
            milestone_text=$(echo "$issue_body" | sed -n 's/.*【里程碑】//p' | xargs)
            echo "milestone_text=$milestone_text" >> $GITHUB_OUTPUT
          else
            echo "type=UNKNOWN" >> $GITHUB_OUTPUT
          fi

      - name: Update Files based on Data Update
        if: steps.extract.outputs.type == 'DATA_UPDATE'
        run: |
          # A function for updating a milestone block to reduce repetition
          update_milestone() {
            local id=$1
            local status=$2
            local progress=$3
            
            # Update Status Text (different logic for the first one)
            if [ "$id" == "dap-1" ]; then
              sed -i "/id=\"dap-1\"/!b;n;n; s|<b>.*</b>|<b>状态: $status</b>|" index.html
            else
              sed -i "/id=\"$id\"/!b;n;n; s|状态: .*</p>|状态: $status</p>|" index.html
            fi
            
            # Update Progress Bar
            sed -i "/id=\"$id\"/!b;n;n;n;n; s/width: [0-9.]*%;/width: $progress%;/" index.html
            sed -i "/id=\"$id\"/!b;n;n;n;n; s/>[0-9.]*%</>$progress%</" index.html
          }

          update_milestone "dap-1" "${{ steps.extract.outputs.dap1_状态 }}" "${{ steps.extract.outputs.dap1_进度 }}"
          update_milestone "dap-2" "${{ steps.extract.outputs.dap2_状态 }}" "${{ steps.extract.outputs.dap2_进度 }}"
          update_milestone "dap-3" "${{ steps.extract.outputs.dap3_状态 }}" "${{ steps.extract.outputs.dap3_进度 }}"
          update_milestone "mol-1" "${{ steps.extract.outputs.mol1_状态 }}" "${{ steps.extract.outputs.mol1_进度 }}"
          update_milestone "mol-2" "${{ steps.extract.outputs.mol2_状态 }}" "${{ steps.extract.outputs.mol2_进度 }}"

          # Update overall progress
          sed -i "s|<div class=\"value\">[0-9.]*%</div>|<div class=\"value\">${{ steps.extract.outputs.项目总进度 }}%</div>|" index.html
          sed -i "s|<div class=\"progress-bar\" style=\"width: [0-9.]*%;\"></div>|<div class=\"progress-bar\" style=\"width: ${{ steps.extract.outputs.项目总进度 }}%;\"></div>|" index.html

      - name: Update Files based on Milestone
        if: steps.extract.outputs.type == 'MILESTONE'
        run: |
          timestamp=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
          milestone_html="<li class=\"timeline-item\"><div class=\"timeline-icon\">⭐</div><span class=\"timeline-date\">${timestamp}</span><p class=\"timeline-content\">${{ steps.extract.outputs.milestone_text }}</p></li>"
          sed -i "/<ul class=\"timeline\" id=\"project-timeline\">/a ${milestone_html}" index.html
      
      - name: Update Timestamp and Commit
        if: steps.extract.outputs.type != 'UNKNOWN'
        run: |
          timestamp=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
          sed -i "s|<span id=\"update-time\">.*</span>|<span id=\"update-time\">${timestamp}</span>|" index.html
          
          git config --global user.name 'Lazarus Diary Bot'
          git config --global user.email 'bot@lazarus.project'
          git add index.html
          if ! git diff --staged --quiet; then
            git commit -m "Automated Diary Update: ${{ steps.extract.outputs.type }} via issue #${{ github.event.issue.number }}"
            git push
          else
            echo "No changes to commit."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.LAZARUS_TOKEN }}
          
      - name: Close the Issue
        if: steps.extract.outputs.type != 'UNKNOWN'
        uses: peter-evans/close-issue@v3
        with:
          comment: "感谢你的更新，合伙人。我已经将这个事件/数据记录到了我们的日记中。✅"
